#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
from modules import aws_enum, gcp_enum, azure_enum, token_extractor, iam_abuse, session_replay

def main():
    parser = argparse.ArgumentParser(description="TokenThief - Cloud Token Extractor and Impersonator")
    parser.add_argument("--provider", choices=["aws", "gcp", "azure"], required=True, help="Cloud provider to target")
    parser.add_argument("--mode", choices=["extract", "abuse", "replay"], required=True, help="Operation mode")
    parser.add_argument("--verbose", action="store_true", help="Enable verbose output")
    args = parser.parse_args()

    if args.provider == "aws":
        if args.mode == "extract":
            aws_enum.extract_aws_tokens(args.verbose)
        elif args.mode == "abuse":
            iam_abuse.aws_escalation(args.verbose)
        elif args.mode == "replay":
            session_replay.aws_session_replay(args.verbose)

    elif args.provider == "gcp":
        if args.mode == "extract":
            gcp_enum.extract_gcp_tokens(args.verbose)
        elif args.mode == "abuse":
            iam_abuse.gcp_escalation(args.verbose)
        elif args.mode == "replay":
            session_replay.gcp_session_replay(args.verbose)

    elif args.provider == "azure":
        if args.mode == "extract":
            azure_enum.extract_azure_tokens(args.verbose)
        elif args.mode == "abuse":
            iam_abuse.azure_escalation(args.verbose)
        elif args.mode == "replay":
            session_replay.azure_session_replay(args.verbose)

if __name__ == "__main__":
    main()
