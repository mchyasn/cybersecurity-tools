import platform
import os
from colorama import Fore, Style

def enumerate_tokens(verbose=False):
    if platform.system() != "Windows":
        print(Fore.YELLOW + "[!] Token hijacking is only supported on Windows." + Style.RESET_ALL)
        return

    try:
        import win32api
        import win32con
        import win32process
        import win32security

        token_file = "output/tokens.txt"
        with open(token_file, "w") as f:
            for pid in win32process.EnumProcesses():
                try:
                    hProcess = win32api.OpenProcess(win32con.PROCESS_QUERY_INFORMATION, False, pid)
                    hToken = win32security.OpenProcessToken(hProcess, win32con.TOKEN_QUERY)
                    user, _ = win32security.GetTokenInformation(hToken, win32security.TokenUser)
                    username = win32security.LookupAccountSid(None, user)[0]
                    f.write(f"PID {pid}: {username}\n")
                    if verbose:
                        print(f"[+] PID {pid}: {username}")
                except Exception:
                    continue

        print(Fore.GREEN + f"[+] Access tokens saved to {token_file}" + Style.RESET_ALL)

    except ImportError:
        print(Fore.RED + "[!] pywin32 is not installed. Token impersonation will not work." + Style.RESET_ALL)
    except Exception as e:
        print(Fore.RED + f"[!] Token hijacking failed: {e}" + Style.RESET_ALL)
