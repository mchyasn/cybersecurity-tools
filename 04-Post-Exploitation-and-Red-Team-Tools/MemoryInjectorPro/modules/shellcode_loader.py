import ctypes

def load_and_execute_shellcode(shellcode_bytes):
    shellcode = ctypes.create_string_buffer(shellcode_bytes)
    ptr = ctypes.cast(shellcode, ctypes.c_void_p).value

    # Set memory permissions to RWX
    PROT_READ = 0x1
    PROT_WRITE = 0x2
    PROT_EXEC = 0x4
    libc = ctypes.CDLL("libc.so.6")
    pagesize = libc.getpagesize()
    addr = ptr - (ptr % pagesize)
    libc.mprotect(addr, len(shellcode_bytes), PROT_READ | PROT_WRITE | PROT_EXEC)

    # Create a function pointer and execute
    shell_func = ctypes.CFUNCTYPE(None)(ptr)
    shell_func()
