import ctypes
import ctypes.wintypes
import win32process
import win32event
import win32api
import win32con

def inject_dll(pid, dll_path, verbose=False):
    if verbose:
        print(f"[DLL] Injecting {dll_path} into PID {pid}")

    kernel32 = ctypes.windll.kernel32
    dll_path_bytes = dll_path.encode('utf-8')

    process = win32api.OpenProcess(win32con.PROCESS_ALL_ACCESS, False, pid)
    addr = kernel32.VirtualAllocEx(process.handle, 0, len(dll_path_bytes), 0x3000, 0x40)
    kernel32.WriteProcessMemory(process.handle, addr, dll_path_bytes, len(dll_path_bytes), None)

    h_kernel32 = kernel32.GetModuleHandleA(b"kernel32.dll")
    h_loadlib = kernel32.GetProcAddress(h_kernel32, b"LoadLibraryA")

    thread = kernel32.CreateRemoteThread(process.handle, None, 0, h_loadlib, addr, 0, None)
    win32event.WaitForSingleObject(thread, win32con.INFINITE)

    if verbose:
        print("[DLL] Injection complete.")
