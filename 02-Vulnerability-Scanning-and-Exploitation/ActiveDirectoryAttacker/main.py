import argparse
import os
import logging
from modules.ldap_enum import ldap_enumeration
from modules.ntlm_probe import ntlm_probe

VERSION = "1.0"

# Ensure output folders
os.makedirs("logs", exist_ok=True)
os.makedirs("scans", exist_ok=True)

# Logger setup (file only for now)
logging.basicConfig(
    filename="logs/debug.log",
    level=logging.DEBUG,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

def main():
    parser = argparse.ArgumentParser(description="ActiveDirectoryAttacker â€“ LDAP and NTLM Abuse Tool")
    parser.add_argument("method", choices=["ldap", "ntlm"], help="Attack method")
    parser.add_argument("target", help="Target IP or hostname")
    parser.add_argument("--domain", help="Domain name (for LDAP/NTLM)")
    parser.add_argument("--username", help="Username (for NTLM auth)")
    parser.add_argument("--password", help="Password (for NTLM auth)")
    parser.add_argument("--auth", choices=["simple", "kerberos"], default="simple", help="Auth mode (simple/kerberos)")
    parser.add_argument("--output", help="Output file path")
    parser.add_argument("--version", action="store_true", help="Show version and exit")
    parser.add_argument("--verbose", action="store_true", help="Enable console logging")

    args = parser.parse_args()

    if args.version:
        print(f"ActiveDirectoryAttacker v{VERSION}")
        return

    # Setup optional console logging
    if args.verbose:
        console = logging.StreamHandler()
        console.setLevel(logging.DEBUG)
        logging.getLogger().addHandler(console)

    # Validate required NTLM credentials
    if args.method == "ntlm":
        if not args.username or not args.password:
            parser.error("NTLM method requires --username and --password.")

    # Auto-generate output filename if not given
    if not args.output:
        args.output = f"scans/{args.method}_{args.target.replace('.', '_')}.txt"

    logging.info(f"Running {args.method} scan on {args.target} (auth={args.auth})")

    if args.method == "ldap":
        ldap_enumeration(args.target, args.domain, args.auth, args.output)
    elif args.method == "ntlm":
        ntlm_probe(args.target, args.domain, args.username, args.password, args.auth, args.output)

if __name__ == "__main__":
    main()
