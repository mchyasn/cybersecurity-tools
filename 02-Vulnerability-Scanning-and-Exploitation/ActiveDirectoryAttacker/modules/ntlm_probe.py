from impacket.smbconnection import SMBConnection
import logging
import time
import socket

def ntlm_probe(target, domain, username, password, auth_method, output_file, port=445):
    logging.info(f"Starting NTLM probe on {target}:{port} (user={username}, domain={domain}, auth={auth_method})")
    start_time = time.time()
    results = []

    smb = None  # Declare up front to avoid unbound variable in finally

    try:
        # Resolve DNS if needed
        try:
            resolved_ip = socket.gethostbyname(target)
            results.append(f"[*] Resolved {target} to {resolved_ip}")
        except Exception as e:
            results.append(f"[!] Failed to resolve {target}: {e}")
            raise

        smb = SMBConnection(remoteName=target, remoteHost=resolved_ip, sess_port=port)
        smb.login(username, password, domain)
        logging.info("NTLM login successful")

        dialect = smb.getDialect()
        results.append(f"[+] NTLM Authentication Succeeded")
        results.append(f"[*] SMB Dialect: {hex(dialect)}")

        # Optional: parse NTLM server challenge in future (not yet implemented)

        # List shares
        try:
            shares = smb.listShares()
            results.append("[*] Accessible Shares:")
            for share in shares:
                results.append(f"    - {share['shi1_netname'][:-1]}")
        except Exception as share_err:
            results.append(f"[!] Share enumeration failed: {share_err}")
            logging.warning(f"Share enumeration failed: {share_err}")

    except Exception as e:
        results.append(f"[!] NTLM probe failed: {e}")
        logging.error(f"NTLM probe error: {e}")

    finally:
        if smb:
            try:
                smb.close()
            except:
                pass

        elapsed = round(time.time() - start_time, 2)
        logging.info(f"NTLM probe completed in {elapsed} seconds")
        results.append(f"[*] Probe duration: {elapsed}s")

        with open(output_file, "w") as f:
            for line in results:
                f.write(line + "\n")

        print(f"[+] NTLM probe complete. Results saved to {output_file}")
