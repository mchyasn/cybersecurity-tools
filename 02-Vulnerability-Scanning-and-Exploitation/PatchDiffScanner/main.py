import os
import json
from binary_diff import load_binary, extract_functions, diff_functions, generate_report
from disassembler import get_disasm_blocks, compare_disassembled_funcs
from cve_context import extract_cve_tags

def main():
    # Load configuration
    with open("config.json") as f:
        config = json.load(f)

    unpatched_path = "binaries/unpatched/target.bin"
    patched_path = "binaries/patched/target.bin"
    output_path = os.path.join(config["output_dir"], "diff_report.json")

    # Load binaries
    bin1 = load_binary(unpatched_path)
    bin2 = load_binary(patched_path)

    if not bin1 or not bin2:
        print("‚ùå Failed to load one or both binaries.")
        return

    # Extract function metadata
    funcs1 = extract_functions(bin1)
    funcs2 = extract_functions(bin2)

    # Perform diffing
    added, removed, modified = diff_functions(funcs1, funcs2)
    generate_report(added, removed, modified, output_path)
    print(f"‚úÖ Function diff written to {output_path}")

    # Disassembly block diffing (Radare2)
    print("üîç Getting disassembly blocks...")
    try:
        dis1 = get_disasm_blocks(unpatched_path)
        dis2 = get_disasm_blocks(patched_path)
        deep_diff = compare_disassembled_funcs(dis1, dis2)

        if deep_diff:
            deep_diff_path = os.path.join(config["output_dir"], "deep_diff.json")
            with open(deep_diff_path, "w") as f:
                json.dump(deep_diff, f, indent=2)
            print(f"‚öôÔ∏è Instruction-level changes written to {deep_diff_path}")
        else:
            print("‚úÖ No instruction-level changes detected.")
    except Exception as e:
        print(f"‚ö†Ô∏è Disassembly failed: {e}")

    # CVE changelog tagging (optional)
    changelog_path = "changelog.txt"
    if os.path.exists(changelog_path):
        with open(changelog_path, "r") as f:
            changelog = f.read()
        cves = extract_cve_tags(changelog)
        if cves:
            print("üìå CVEs detected in changelog:", cves)
        else:
            print("‚ÑπÔ∏è No CVEs detected in changelog.")
    else:
        print("‚ÑπÔ∏è changelog.txt not found ‚Äî skipping CVE tagging.")

if __name__ == "__main__":
    main()
