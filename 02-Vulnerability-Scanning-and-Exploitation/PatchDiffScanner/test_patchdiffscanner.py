import os
import pytest
from binary_diff import load_binary, extract_functions, diff_functions
from disassembler import get_disasm_blocks

BIN_PATH = "binaries/unpatched/target.bin"

def test_load_binary():
    binary = load_binary(BIN_PATH)
    assert binary is not None
    assert hasattr(binary, "symbols")

def test_extract_functions():
    binary = load_binary(BIN_PATH)
    funcs = extract_functions(binary)
    assert isinstance(funcs, dict)

def test_function_diff():
    old = {"foo": (0x1000, 10)}
    new = {"foo": (0x1000, 20), "bar": (0x2000, 15)}
    added, removed, modified = diff_functions(old, new)
    assert "bar" in added
    assert "foo" in modified
    assert len(removed) == 0

def test_disassembly_blocks():
    blocks = get_disasm_blocks(BIN_PATH)
    assert isinstance(blocks, dict)
    assert all(isinstance(v, list) for v in blocks.values())
