import requests
import logging

def check_php_deserialization(url, output_file):
    logging.info("Starting PHP deserialization check...")

    payload = {'data': 'O:8:"Exploit":0:{}'}  # Fake serialized PHP object

    try:
        r = requests.post(url, data=payload, timeout=5)
        result = []

        if "unserialize" in r.text.lower() or r.status_code == 500:
            result.append("[+] Possible PHP unserialize vulnerability detected.")
        else:
            result.append("[-] No obvious PHP deserialization issue detected.")

        result.append(f"[*] HTTP status: {r.status_code}")
        result.append(f"[*] Content preview: {r.text[:120].replace('\\n', '')}...")

        with open(output_file, "w") as f:
            for line in result:
                f.write(line + "\n")

        print(f"[+] PHP deserialization check complete. Results saved to {output_file}")
        logging.info("PHP deserialization detection finished")

    except Exception as e:
        logging.error(f"PHP check failed: {e}")
        print(f"[!] PHP deserialization check error: {e}")
