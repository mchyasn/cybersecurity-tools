import requests
import logging

def check_dotnet_deserialization(url, output_file):
    logging.info("Starting .NET deserialization check...")

    headers = {
        "Content-Type": "application/x-dotnet-binary",
        "User-Agent": "DeserializationDetector"
    }

    fake_payload = b"\x00\x01\x02\x03"  # Simulated .NET binary blob

    try:
        r = requests.post(url, data=fake_payload, headers=headers, timeout=5)
        result = []

        if "BinaryFormatter" in r.text or r.status_code == 500:
            result.append("[+] Potential .NET deserialization vulnerability detected.")
        else:
            result.append("[-] No obvious .NET deserialization behavior.")

        result.append(f"[*] HTTP status: {r.status_code}")
        result.append(f"[*] Content preview: {r.text[:120].replace('\\n', '')}...")

        with open(output_file, "w") as f:
            for line in result:
                f.write(line + "\n")

        print(f"[+] .NET deserialization check complete. Results saved to {output_file}")
        logging.info(".NET deserialization detection finished")

    except Exception as e:
        logging.error(f".NET check failed: {e}")
        print(f"[!] .NET deserialization check error: {e}")
