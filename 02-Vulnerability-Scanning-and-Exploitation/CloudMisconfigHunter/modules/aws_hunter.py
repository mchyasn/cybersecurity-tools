import boto3
import botocore
import logging
from colorama import Fore, Style

def run_aws_check(bucket_name, output_file):
    results = []
    results.append(f"[*] AWS S3 Public Access Check for bucket: {bucket_name}")

    s3 = boto3.resource("s3", config=botocore.client.Config(signature_version=botocore.UNSIGNED))
    bucket = s3.Bucket(bucket_name)

    try:
        public_objects = []
        for obj in bucket.objects.limit(10):
            public_objects.append(obj.key)
        if public_objects:
            results.append(Fore.RED + f"[+] Bucket is PUBLIC! Objects found:" + Style.RESET_ALL)
            for key in public_objects:
                results.append(f"  - {key}")
        else:
            results.append(Fore.YELLOW + "[-] Bucket is public but contains no listable objects." + Style.RESET_ALL)
    except botocore.exceptions.ClientError as e:
        error_code = e.response['Error']['Code']
        if error_code in ["403", "AccessDenied"]:
            results.append(Fore.GREEN + "[âœ“] Bucket is NOT publicly listable." + Style.RESET_ALL)
        elif error_code == "NoSuchBucket":
            results.append(Fore.YELLOW + "[!] Bucket does not exist." + Style.RESET_ALL)
        else:
            results.append(Fore.MAGENTA + f"[!] Error: {error_code}" + Style.RESET_ALL)
        logging.warning(f"ClientError: {e}")
    except Exception as ex:
        results.append(Fore.MAGENTA + f"[!] Unexpected error: {ex}" + Style.RESET_ALL)
        logging.error(f"Unexpected exception: {ex}")

    # Write clean output
    with open(output_file, "w") as f:
        for line in results:
            f.write(line.replace(Fore.RED, "").replace(Fore.GREEN, "").replace(Fore.YELLOW, "")
                        .replace(Fore.MAGENTA, "").replace(Fore.CYAN, "").replace(Style.RESET_ALL, "") + "\n")

    print(f"[=] AWS scan results written to {output_file}")
