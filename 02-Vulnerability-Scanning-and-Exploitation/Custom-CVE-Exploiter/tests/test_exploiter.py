#!/usr/bin/env python3
"""
Test suite for Custom-CVE-Exploiter
"""

import os
import sys
import pytest

BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
SRC_DIR = os.path.join(BASE_DIR, "src")
if SRC_DIR not in sys.path:
    sys.path.insert(0, SRC_DIR)
if BASE_DIR not in sys.path:
    sys.path.insert(0, BASE_DIR)

import main as exploiter

CONFIG_PATH = os.path.join(BASE_DIR, "configs", "config.yaml")

def test_config_file_exists():
    assert os.path.isfile(CONFIG_PATH), f"Config file missing: {CONFIG_PATH}"

def test_config_parseable():
    config = exploiter.check_config_file(CONFIG_PATH)
    assert isinstance(config, dict)
    assert "targets" in config and isinstance(config["targets"], list)
    assert "modules" in config and isinstance(config["modules"], list)

@pytest.mark.parametrize("module_entry", [
    {"name": "cve_2021_1234", "params": {"exploit_mode": "safe", "timeout": 5}},
])
def test_module_import_and_run(module_entry):
    mod = exploiter.load_module(module_entry["name"])
    assert mod is not None, f"Module {module_entry['name']} failed to import"
    assert hasattr(mod, "run"), f"Module {module_entry['name']} missing run()"
    result = exploiter.run_module(mod, "127.0.0.1", module_entry["params"])
    assert isinstance(result, dict)
    assert "result" in result or "error" in result
